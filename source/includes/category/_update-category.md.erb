## Update a category


> REQUEST

```shell
curl -X PUT \
  <%= config[:endpoint] %>/media/metadata \
  -H 'Authorization: <%= config[:token] %>' \
  -H 'Content-Type: application/json' \
  -d '{
    "appId": "<%= config[:app_id] %>",
    "id": "<%= config[:category_update_id] %>",
    "name": "<%= config[:category_update_name] %>",
    "type": "<%= config[:category_update_type] %>",
    "description": "<%= config[:category_update_description] %>",
    "orderNumber": <%= config[:category_update_order_number] %>
}'
```

```ruby
require "uiza"

Uiza.app_id = "<%= config[:app_id] %>"
Uiza.authorization = "<%= config[:token] %>"

params = {
  id: "<%= config[:category_update_id] %>",
  name: "<%= config[:category_update_name] %>",
  type: "<%= config[:category_update_type] %>",
  description: "<%= config[:category_update_description] %>",
  orderNumber: <%= config[:category_update_order_number] %>
}

begin
  category = Uiza::Category.update params
  puts category.id
  puts category.name
rescue Uiza::Error::UizaError => e
  puts "description_link: #{e.description_link}"
  puts "code: #{e.code}"
  puts "message: #{e.message}"
rescue StandardError => e
  puts "message: #{e.message}"
end
```

```python
import uiza

from uiza.api_resources.category import Category
from uiza.exceptions import ServerException

uiza.app_id = "<%= config[:app_id] %>"
uiza.authorization = "<%= config[:token] %>"

category_data = {
  "id": "<%= config[:category_update_id] %>",
  "name": "<%= config[:category_update_name] %>",
  "type": "<%= config[:category_update_type] %>",
  "description": "<%= config[:category_update_description] %>",
  "orderNumber": <%= config[:category_update_order_number] %>
}

try:
  res, status_code = Category().update(**category_data)

  print("res: ", res)
except ServerException as e:
  raise e
except Exception as e:
  raise e
```

```php
<?php
require __DIR__."/../vendor/autoload.php";

Uiza\Base::setWorkspaceApiDomain("your-workspace-api-domain.uiza.co");
Uiza\Base::setAuthorization("your-authorization");

$params = [
  "name" => "Folder edited",
  "type" => "folder"
];

try {
  Uiza\Category::update("your-category-id", $params);
} catch(\Uiza\Exception\ErrorResponse $e) {
  print($e);
}
?>
```

```java
import java.util.*;
import com.google.gson.*;

import io.uiza.Uiza;
import io.uiza.exception.*;
import io.uiza.model.Category;
import io.uiza.model.Category.*;

public class Main {

  public static void main(String[] args) {
    Uiza.workspaceApiDomain = "your-workspace-api-domain.uiza.co";
    Uiza.authorization = "your-authorization";

    Map<String, Object> params = new HashMap<>();
    params.put("name", "Playlist Sample");
    params.put("type", Type.PLAYLIST.toString());

    try {
      JsonObject response = Category.update("<category-id>", params);
      System.out.println(response);
    } catch (UizaException e) {
      System.out.println("Status is: " + e.getStatusCode());
      System.out.println("Message is: " + e.getMessage());
      System.out.println("Description link is: " + e.getDescriptionLink());
    } catch (Exception e) {
      System.out.println(e);
    }
  }
}
```

```javascript
const uiza = require('uiza');
uiza.workspace_api_domain('your-workspace-api-domain.uiza.co');
uiza.authorization('your-authorization-key');

const params = {
  'id': 'your-category-id',
  'name': 'Folder sample 312',
  'type': 'folder',
  'orderNumber': 1,
  'description': 'Folder description',
  'icon': 'https://exemple.com/icon.png'
}

uiza.category.update(params)
  .then((res) => {
    //Identifier of category has been updated
  }).catch((err) => {
    //Error
  });
```

```go
import (
  "github.com/uizaio/api-wrapper-go"
  "github.com/uizaio/api-wrapper-go/category"
)

func init() {
  Uiza.WorkspaceAPIDomain = "your-workspace-api-domain.uiza.co"
  Uiza.Authorization = "your-authorization"
}

var typeCategory = uiza.CategoryFolderType
params := &uiza.CategoryUpdateParams{
  ID: uiza.String("your-category-id"),
  Name: uiza.String(""),
  Type: &typeCategory,
  Description:uiza.String(""),
  Icon:uiza.String(""),
  OrderNumber:uiza.Int64(2),
}

response, err := category.Update(params)
if err != nil {
  log.Printf("%v\n", err)
} else {
  log.Printf("%v\n", response)
}
```

```csharp
using System;
using Uiza.Net.Configuration;
using Uiza.Net.Enums;
using Uiza.Net.Parameters;
using Uiza.Net.Services;

UizaConfiguration.SetupUiza(new UizaConfigOptions
{
  WorkspaceApiDomain = "your-workspace-api-domain.uiza.co",
  Authorization = "your-authorization"
});

try
{
  var result = UizaServices.Category.Update(new UpdateCategoryParameter()
  {
    Id = "your-category-id",
    Name = string.Format("Category name {0}", Guid.NewGuid().ToString()),
    Type = CategoryTypes.PlayList
  });

  Console.WriteLine(string.Format("Update Category Id = {0} Success", result.Data.id));
  Console.ReadLine();
}
catch (UizaException ex)
{
  Console.WriteLine(ex.Message);
  Console.ReadLine();
}
```

Updates the specified category by setting the values of the parameters passed. Any parameters not provided will be left unchanged.

> RESPONSE

```json
{
  "id": "<%= config[:category_update_id] %>"
}
```

**HTTP Request**

<span class="put-button"> PUT </span>
```<%= config[:endpoint] %>/media/metadata```

**ARGUMENTS**

| Parameter  | Description | Required |
| -------------  | ------------- | ------------- |
| **id** *string* | Identifier of category | **Yes** |
| **name** *string* | The category’s name, meant to be displayable to end users. | **Yes** |
| **type** *enum* | Allowed values [ **folder**&vert;**playlist**&vert;**tag** ]. | **Yes** |
| **description** *string* | The category’s description, meant to be displayable to end users. |  |
| **orderNumber** *integer* | The category's display order, categories with smaller number will be displayed first. |  |
| **icon** *string* | The URL to the category's icon. |  |


**RETURNS**

Returns the ID of the updated category if the update succeeded.
