## List categories


> REQUEST

```bash
curl -X GET \
  <%= config[:endpoint] %>/media/metadata \
  -H 'Authorization: <%= config[:token] %>'
```

```ruby
require "uiza"

Uiza.workspace_api_domain = "<%= config[:endpoint] %>"
Uiza.authorization = "<%= config[:token] %>"

begin
  categories = Uiza::Category.list
  puts categories.first.id
  puts categories.first.name
rescue Uiza::Error::UizaError => e
  puts "description_link: #{e.description_link}"
  puts "code: #{e.code}"
  puts "message: #{e.message}"
rescue StandardError => e
  puts "message: #{e.message}"
end
```

```python
res, status_code = Category().list()

print("status_code", status_code)
```

```php
<?php
$listCategory = Uiza\Category::all();

// or

$listCategory = Uiza\Category::list();
?>
```

```java
import io.uiza.model.Category;

Uiza.apiDomain = "<%= config[:endpoint] %>";
Uiza.apiKey = "<%= config[:token] %>";

try {
  JsonArray categories = Category.list();
  JsonObject category = categories.get(0).getAsJsonObject();
  System.out.println(category.get("id"));
} catch (UizaException e) {
  System.out.println("Status is: " + e.getStatusCode());
  System.out.println("Message is: " + e.getMessage());
  System.out.println("Description link is: " + e.getDescriptionLink());
} catch (Exception e) {

}
```

```javascript
uiza.category.list()
  .then((res) => {
    //Identifier of category list
  }).catch((err) => {
    //Error
  });
```

```go
import (
  "github.com/uizaio/api-wrapper-go"
  "github.com/uizaio/api-wrapper-go/category"
)

params := &uiza.CategoryListParams{
  Page:uiza.Int64(2),
  Limit:uiza.Int64(10),
}
listData, _ := category.List(params)
for _, v := range listData {
  log.Printf("%v\n", v)
}
```

```csharp
using Uiza.Net.Services;

UizaConfiguration.SetupUiza(new UizaConfigOptions
{
  ApiKey = "<%= config[:token] %>",
  ApiBase = "<%= config[:endpoint] %>"
});

var listResult = UizaServices.Category.List(new BaseParameter());
Console.WriteLine(string.Format("Success Get List Category, total record {0}", listResult.MetaData.result));
```

Returns a list of your categories. The categories are returned sorted by `orderNumber`, with the smallest `orderNumber` appearing first.

> RESPONSE

```json
{
  "data": [
      {
          "id": "f932aa79-852a-41f7-9adc-19935034f944",
          "name": "Playlist sample",
          "description": "Playlist desciption",
          "slug": "playlist-sample",
          "type": "playlist",
          "orderNumber": 3,
          "icon": "/example.com/image002.png",
          "status": 1,
          "createdAt": "2018-06-18T04:29:05.000Z",
          "updatedAt": "2018-06-18T04:29:05.000Z"
      },
      {
          "id": "ab54db88-0c8c-4928-b1be-1e7120ad2c39",
          "name": "Folder sample",
          "description": "Folder's description",
          "slug": "folder-sample",
          "type": "folder",
          "orderNumber": 1,
          "icon": "/example.com/icon.png",
          "status": 1,
          "createdAt": "2018-06-18T03:17:07.000Z",
          "updatedAt": "2018-06-18T03:17:07.000Z"
      }
  ],
  "metadata": {
      "total": 2,
      "result": 2,
      "page": 1,
      "limit": 20
  },
}
```

**HTTP Request**

<span class="get-button"> GET </span>
```<%= config[:endpoint] %>/media/metadata```

**RETURNS**

A dictionary with a data property that contains an array of up to limit categories. Each entry in the array is a separate category object. If no more categories are available, the resulting array will be empty. This request should never return an error.