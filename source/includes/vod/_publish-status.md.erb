## Get publish status


> REQUEST

```bash
curl -X GET \
  <%= config[:endpoint] %>/media/entity/publish/status?id=<%= config[:uiza_entity_id] %> \
  -H 'Authorization: <%= config[:token] %>'
```

```ruby
require "uiza"

Uiza.workspace_api_domain = "<%= config[:endpoint] %>"
Uiza.authorization = "<%= config[:token] %>"

begin
  response = Uiza::Entity.get_status_publish "your-entity-id"
  puts response.progress
  puts response.status
rescue Uiza::Error::UizaError => e
  puts "description_link: #{e.description_link}"
  puts "code: #{e.code}"
  puts "message: #{e.message}"
rescue StandardError => e
  puts "message: #{e.message}"
end
```

```python
res, status_code = Entity().get_status_publish("33a86c18-f502-41a4-9c4c-d4e14efca238")

print("status_code", status_code)
```

```php
<?php
Uiza\Entity::getStatusPublish("key ...");
?>
```

```java
import io.uiza.model.Entity;

Uiza.apiDomain = "<%= config[:endpoint] %>";
Uiza.apiKey = "<%= config[:token] %>";

try {
  JsonObject response = Entity.getStatusPublish("<entity-id>");
  System.out.println(response.get("status"));
} catch (UizaException e) {
  System.out.println("Status is: " + e.getStatusCode());
  System.out.println("Message is: " + e.getMessage());
  System.out.println("Description link is: " + e.getDescriptionLink());
} catch (Exception e) {

}
```

```javascript
uiza.entity.get_status_publish({
  'id': '8c6de86e-f468-4226-b476-4f320bda225a',
}).then((res) => {
  //Progress of task publish, will be success when reach 100
  // Status of task publish (processing, success, error)
}).catch((err) => {
  //Error
});
```

```go
import (
  uiza "github.com/uizaio/api-wrapper-go"
  "github.com/uizaio/api-wrapper-go/entity"
)

params := &uiza.EntityPublishParams{ID: uiza.String("Your entity ID")}
response, _ := entity.GetStatusPublish(params)
log.Printf("%v\n", response)
```

```csharp
using Uiza.Net.Services;

UizaConfiguration.SetupUiza(new UizaConfigOptions
{
  ApiKey = "<%= config[:token] %>",
  ApiBase = "<%= config[:endpoint] %>"
});

var result =  UizaServices.Entity.GetStatusPublish("Entity Id");
Console.WriteLine(string.Format("Get Status Publish Success : temp_access_id = {0} ", result.Data.status));
```

Checks progress of a publishing request. You need only supply the unique publishing identifier that was returned upon [publishing entity](#publish-entity-to-cdn) request.

> RESPONSE

```json
{
  "progress": 0,
  "status": "processing"
}
```

**HTTP Request**

<span class="get-button"> GET </span>
```<%= config[:endpoint] %>/media/entity/publish/status```

**ARGUMENTS**

| Parameter       | Description   | Required |
| --------------- | ------------- | ------------- |
| **id** *string* | The identifier of the task received from publish API | **Yes** |


**RETURNS**

Return `progress` and `status` of the publishing task if a valid identifier was provided. A successful task will have `progress` equals 100 (percent) and **success** as `status`.

| Parameter   | Description             |
|-------------|-------------------------|
| **progress** *number* | Progress of the  task publish, in percentage |
| **status** *string*   | Status of task publish (processing, success, error) |
