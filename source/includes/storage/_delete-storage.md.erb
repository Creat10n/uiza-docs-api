## Delete a storage


> REQUEST

```bash
curl -X DELETE \
  <%= config[:endpoint] %>/media/storage?id=cd003123-7ec9-4f3a-9d7c-f2de93e83e49 \
  -H 'Authorization: <%= config[:token] %>'
```

```ruby
require "uiza"

Uiza.workspace_api_domain = "<%= config[:endpoint] %>"
Uiza.authorization = "<%= config[:token] %>"

begin
  storage = Uiza::Storage.remove "your-storage-id"
  puts storage.id
rescue Uiza::Error::UizaError => e
  puts "description_link: #{e.description_link}"
  puts "code: #{e.code}"
  puts "message: #{e.message}"
rescue StandardError => e
  puts "message: #{e.message}"
end
```

```python
res, status_code = Storage().remove("ddf09dd0-b7a8-4f29-92df-14dafb97b2aa")

print("id: ", res.id)
print("status_code", status_code)
```

```php
<?php
Uiza\Storage::remove("key ...");
?>
```

```java
import io.uiza.model.Storage;

Uiza.apiDomain = "<%= config[:endpoint] %>";
Uiza.apiKey = "<%= config[:token] %>";

try {
  JsonObject storage = Storage.remove("<storage-id>");
  System.out.println(storage.get("id"));
} catch (UizaException e) {
  System.out.println("Status is: " + e.getStatusCode());
  System.out.println("Message is: " + e.getMessage());
  System.out.println("Description link is: " + e.getDescriptionLink());
} catch (Exception e) {

}
```

```javascript
uiza.storage.remove("03e6a059-c6d2-440c-a653-1e309918c792").then((res) => {
  //Identifier of storage has been removed
}).catch((err) => {
  //Error
});
```

```go
import (
  uiza "github.com/uizaio/api-wrapper-go"
  "github.com/uizaio/api-wrapper-go/storage"
)

params := &uiza.StorageRemoveParams{ID: uiza.String("Your entity ID")}
response, _ := storage.Remove(params)
log.Printf("%v\n", response)
```

```csharp
using Uiza.Net.Services;

UizaConfiguration.SetupUiza(new UizaConfigOptions
{
  ApiKey = "<%= config[:token] %>",
  ApiBase = "<%= config[:endpoint] %>"
});

var result = UizaServices.Storage.Remove((string)createResult.Data.id);
Console.WriteLine(string.Format("Remove Storage Id = {0} Success", result.Data.id));
```

Permanently deletes a storage. It cannot be undone.

> RESPONSE

```json
{
  "id": "cd003123-7ec9-4f3a-9d7c-f2de93e83e49",
}
```

**HTTP Request**

<span class="delete-button"> DELETE </span>
```<%= config[:endpoint] %>/media/storage```

**ARGUMENTS**

| Parameter | Description | Required |
| ------------- | ------------- | ------------- |
| **id** *string* | The ID of the storage to be deleted.| **Yes** |



**RETURNS**

Returns an ID of the deleted storage on success. Otherwise, this call returns an error.
