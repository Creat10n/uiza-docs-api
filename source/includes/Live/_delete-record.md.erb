## Delete a record file

> REQUEST

```bash
curl -X DELETE \
  <%= config[:endpoint] %>/live/entity/dvr?id=009596b1-f751-4102-86f7-7290a9f3f0cf \
  -H 'Authorization: <%= config[:token] %>'
```

```ruby
require "uiza"

Uiza.workspace_api_domain = "<%= config[:endpoint] %>"
Uiza.authorization = "<%= config[:token] %>"

begin
  live = Uiza::Live.delete "your-record-id" #Identifier of record (get from list record)
  puts live.id
rescue Uiza::Error::UizaError => e
  puts "description_link: #{e.description_link}"
  puts "code: #{e.code}"
  puts "message: #{e.message}"
rescue StandardError => e
  puts "message: #{e.message}"
end
```

```python
res, status_code = Live().delete_recorded("ddf09dd0-b7a8-4f29-92df-14dafb97b2aa")

print("status_code", status_code)
```

```php
<?php
Uiza\Live::delete("id record ...");
?>
```

```java
import io.uiza.model.Live;

Uiza.apiDomain = "<%= config[:endpoint] %>";
Uiza.apiKey = "<%= config[:token] %>";

try {
  JsonObject live = Live.delete("<record-id>");
  System.out.println(live.get("id"));
} catch (UizaException e) {
  System.out.println("Status is: " + e.getStatusCode());
  System.out.println("Message is: " + e.getMessage());
  System.out.println("Description link is: " + e.getDescriptionLink());
} catch (Exception e) {

}
```

```javascript
const uiza = require('../lib/uiza')('<%= config[:endpoint] %>', '<%= config[:token] %>');

uiza.live.delete('id....')
  .then((res) => {
    // Identifier of deleting a record
  }).catch((err) => {
    //Error
  });
```

```go
import (
  "github.com/uizaio/api-wrapper-go"
  "github.com/uizaio/api-wrapper-go/live"
)

param := &uiza.LiveIDParams{ID: uiza.String("Your Recorded ID")}
response, _ := live.Delete(param)
log.Printf("%v\n", response)
```

```csharp
using Uiza.Net.Services;

UizaConfiguration.SetupUiza(new UizaConfigOptions
{
  ApiKey = "<%= config[:token] %>",
  ApiBase = "<%= config[:endpoint] %>"
});
var deleteRecordFileResult = UizaServices.LiveStreaming.Delete((string)createResult.Data.id);
Console.WriteLine(string.Format("Delete Live Feed Success", deleteRecordFileResult.Data.id));
```

Delete a recorded file

> RESPONSE

```json
{
  "id": "009596b1-f751-4102-86f7-7290a9f3f0cf"
}
```

**HTTP Request**

<span class="delete-button"> DELETE </span>
```<%= config[:endpoint] %>/live/entity/dvr```

**ARGUMENTS**


| Parameter   | Description |
|-------------|-------------------------|
| **id** *string* | The ID of recorded file taken from [list record](#list-record) |

**RETURNS**

Returns an ID of the deleted recorded file on success. Otherwise, this call returns an error.